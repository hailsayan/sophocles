x-kafka-common: &kafka-common
  image: "bitnami/kafka:latest"
  restart: always
  environment: &kafka-env
    KAFKA_KRAFT_CLUSTER_ID: oxKVE1dstwq18M5FitTbQ
    KAFKA_CFG_PROCESS_ROLES: controller,broker
    KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
    KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
    KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
    KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 2
  healthcheck:
    test: ["CMD", "nc", "-z", "localhost", "9092"]
    interval: 10s
    timeout: 5s
    retries: 10

x-rabbitmq-common: &rabbitmq-common
  image: "rabbitmq:4-management-alpine"
  restart: always
  environment: &rabbitmq-env
    RABBITMQ_DEFAULT_USER: admin
    RABBITMQ_DEFAULT_PASS: 74faa001f5ba434d
    RABBITMQ_DEFAULT_VHOST: /
    RABBITMQ_ERLANG_COOKIE: 40556c104edf7359de6a595c
  healthcheck:
    test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
    interval: 10s
    timeout: 5s
    retries: 10

x-redis-common: &redis-common
  image: bitnami/redis-cluster:latest
  restart: always
  environment: &redis-env
    REDIS_PASSWORD: a45e0a886d9b88f9ede74def
    REDIS_NODES: redis-1 redis-2 redis-3 redis-cluster

services:
  kafka-1:
    <<: *kafka-common
    container_name: kafka-1
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 1
    volumes:
      - kafka-1_data:/bitnami/kafka

  kafka-2:
    <<: *kafka-common
    container_name: kafka-2
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 2
    volumes:
      - kafka-2_data:/bitnami/kafka

  kafka-3:
    <<: *kafka-common
    container_name: kafka-3
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 3
    volumes:
      - kafka-3_data:/bitnami/kafka

  rabbitmq-1:
    <<: *rabbitmq-common
    hostname: rabbitmq-1
    container_name: rabbitmq-1
    environment:
      <<: *rabbitmq-env
    volumes:
      - rabbitmq-1_data:/var/lib/rabbitmq/mnesia

  rabbitmq-2:
    <<: *rabbitmq-common
    hostname: rabbitmq-2
    container_name: rabbitmq-2
    environment:
      <<: *rabbitmq-env
    volumes:
      - rabbitmq-2_data:/var/lib/rabbitmq/mnesia
    command: >
      bash -c "
      rabbitmq-server -detached &&
      sleep 10 &&
      rabbitmqctl stop_app &&
      rabbitmqctl join_cluster rabbit@rabbitmq-1 &&
      rabbitmqctl start_app &&
      rabbitmqctl stop &&
      exec rabbitmq-server"
    depends_on:
      rabbitmq-1:
        condition: service_healthy

  rabbitmq-3:
    <<: *rabbitmq-common
    hostname: rabbitmq-3
    container_name: rabbitmq-3
    environment:
      <<: *rabbitmq-env
    volumes:
      - rabbitmq-3_data:/var/lib/rabbitmq/mnesia
    command: >
      bash -c "
      rabbitmq-server -detached &&
      sleep 10 &&
      rabbitmqctl stop_app &&
      rabbitmqctl join_cluster rabbit@rabbitmq-1 &&
      rabbitmqctl start_app &&
      rabbitmqctl stop &&
      exec rabbitmq-server"
    depends_on:
      rabbitmq-1:
        condition: service_healthy

  haproxy-rabbitmq:
    image: haproxy:latest
    container_name: haproxy-rabbitmq
    ports:
      - "1936:1936"
      - "15872:15672"
    volumes:
      - ./haproxy-rabbitmq.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      rabbitmq-1:
        condition: service_healthy
      rabbitmq-2:
        condition: service_healthy
      rabbitmq-3:
        condition: service_healthy

  redis-1:
    <<: *redis-common
    container_name: redis-1
    environment:
      <<: *redis-env
    volumes:
      - redis-1_data:/bitnami/redis/data

  redis-2:
    <<: *redis-common
    container_name: redis-2
    environment:
      <<: *redis-env
    volumes:
      - redis-2_data:/bitnami/redis/data

  redis-3:
    <<: *redis-common
    container_name: redis-3
    environment:
      <<: *redis-env
    volumes:
      - redis-3_data:/bitnami/redis/data

  redis-cluster:
    <<: *redis-common
    container_name: redis-cluster
    environment:
      <<: *redis-env
      REDISCLI_AUTH: a45e0a886d9b88f9ede74def
      REDIS_CLUSTER_REPLICAS: 1
      REDIS_CLUSTER_CREATOR: "yes"
    volumes:
      - redis-cluster:/bitnami/redis/data
    depends_on:
      - redis-1
      - redis-2
      - redis-3

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    container_name: mailhog
    ports:
      - "8025:8025"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025/api/v2/messages"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  kafka-1_data:
  kafka-2_data:
  kafka-3_data:
  rabbitmq-1_data:
  rabbitmq-2_data:
  rabbitmq-3_data:
  redis-1_data:
  redis-2_data:
  redis-3_data:
  redis-cluster:
